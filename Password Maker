import secrets
import string

def generate_password(length=12, use_letters=True, use_digits=True, use_punct=True):
    chars = ""
    if use_letters:
        chars += string.ascii_letters
    if use_digits:
        chars += string.digits
    if use_punct:
        chars += string.punctuation

    if not chars:
        raise ValueError("At least one character set must be selected.")

    return ''.join(secrets.choice(chars) for _ in range(length))

if __name__ == "__main__":
    try:
        length = int(input("Enter password length (positive integer): "))
        if length <= 0:
            raise ValueError("Password length must be greater than zero.")
    except ValueError as e:
        print(f"Invalid input: {e}")
        exit(1)

    use_letters = input("Include letters? (y/n): ").strip().lower() == 'y'
    use_digits = input("Include digits? (y/n): ").strip().lower() == 'y'
    use_punct = input("Include punctuation? (y/n): ").strip().lower() == 'y'

    try:
        password = generate_password(length, use_letters, use_digits, use_punct)
    except ValueError as e:
        print(f"Error: {e}")
        exit(1)

    print("Generated password:", password)

    try:
        with open("generated_password.txt", "w") as f:
            f.write(password)
        print("Password saved to generated_password.txt")
    except Exception as e:
        print(f"Error saving password to file: {e}")
